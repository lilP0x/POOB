#BlueJ class context
comment0.target=Fligth
comment0.text=\r\n\ The\ Flight\ class\ represents\ a\ flight\ object\ that\ extends\ the\ Triangle\ class.\r\n\ It\ stores\ information\ about\ the\ flight's\ color,\ departure,\ and\ destination\ points.\r\n\ @author\ Maria\ Torres\ ,\ Juan\ Fernandez\ \r\n\ @version\ 1.5\ 23/09/2023\r\n
comment1.params=color\ from\ to
comment1.target=Fligth(java.lang.String,\ int[],\ int[])
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Flight.\r\n\r\n\ @param\ color\ The\ color\ of\ the\ Flight\ object.\r\n\ @param\ from\ \ An\ integer\ array\ representing\ the\ departure\ location.\r\n\ @param\ to\ \ \ \ An\ integer\ array\ representing\ the\ destination\ location.\r\n
comment10.params=
comment10.target=boolean\ getVisible()
comment10.text=\r\n\ Retrieves\ the\ visibility\ status\ of\ the\ objects.\r\n\ This\ method\ gets\ the\ visibility\ status\ of\ the\ plane\ object\ and\ returns\ it.\r\n\r\n\ @return\ True\ if\ the\ plane\ object\ is\ currently\ visible,\ false\ otherwise.\r\n
comment11.params=state
comment11.target=void\ setVisible(boolean)
comment11.text=\r\n\ Sets\ the\ visibility\ status\ of\ the\ object.\r\n\r\n\ @param\ state\ True\ to\ make\ the\ object\ visible,\ false\ to\ make\ it\ invisible.\r\n
comment12.params=
comment12.target=void\ makeInvisible()
comment12.text=\r\n\ Makes\ the\ plane\ and\ line\ objects\ invisible\ on\ the\ canvas\ window.\r\n\ This\ method\ sets\ the\ visibility\ status\ of\ both\ the\ plane\ and\ line\ objects\ to\r\n\ false,\ making\ them\ invisible\ on\ the\ canvas\ window.\r\n
comment13.params=
comment13.target=int[][]\ fligthLocation()
comment13.text=\r\n\ Retrieves\ the\ flight's\ location\ as\ a\ two-dimensional\ array.\r\n\r\n\ @return\ A\ two-dimensional\ array\ representing\ the\ location\ of\ the\ flight.\r\n\ \ \ \ \ \ \ \ \ Each\ row\ contains\ a\ pair\ of\ X\ and\ Y\ coordinates.\r\n
comment14.params=
comment14.target=boolean\ uselessFligth()
comment14.text=\r\n\ Checks\ if\ the\ current\ flight\ is\ marked\ as\ useless.\r\n\ This\ method\ returns\ the\ current\ status\ of\ the\ flight,\ indicating\ whether\ it\r\n\ is\ marked\ as\ useless\ or\ not.\r\n\r\n\ @return\ True\ if\ the\ flight\ is\ marked\ as\ useless,\ false\ otherwise.\r\n
comment15.params=
comment15.target=java.lang.String\ getColor()
comment15.text=\r\n\ Retrieves\ the\ color\ of\ the\ flight.\r\n\ This\ method\ returns\ the\ color\ of\ the\ flight.\r\n\r\n\ @return\ The\ color\ of\ the\ flight\ as\ a\ string.\r\n
comment2.params=
comment2.target=int\ fligthCamera()
comment3.params=positionX\ positionY
comment3.target=boolean\ hasislands(int[],\ int[])
comment3.text=\r\n\ Checks\ if\ there\ are\ islands\ within\ the\ specified\ positions.\r\n\ This\ method\ iterates\ through\ the\ list\ of\ photographs\ and\ checks\ if\ any\ of\ them\ capture\r\n\ islands\ within\ the\ given\ positions.\r\n\r\n\ @param\ positionX\ An\ array\ of\ X-coordinates\ representing\ positions.\r\n\ @param\ positionY\ An\ array\ of\ Y-coordinates\ representing\ positions.\r\n\ @return\ True\ if\ there\ are\ islands\ within\ the\ specified\ positions,\ false\ otherwise.\r\n
comment4.params=positionX\ positionY
comment4.target=void\ useless(int[],\ int[])
comment4.text=\r\n\ Marks\ the\ current\ fligth\ as\ not\ useless\ if\ there\ are\ islands\ within\ the\ specified\ positions.\r\n\ This\ method\ iterates\ through\ the\ list\ of\ photographs\ and\ checks\ if\ any\ of\ them\ capture\r\n\ islands\ within\ the\ given\ positions.\ If\ islands\ are\ observed,\ the\ current\ fligth\ is\ marked\r\n\ as\ not\ useless.\r\n\r\n\ @param\ positionX\ An\ array\ of\ X-coordinates\ representing\ positions.\r\n\ @param\ positionY\ An\ array\ of\ Y-coordinates\ representing\ positions.\r\n
comment5.params=teta\ color
comment5.target=void\ photograph(int,\ java.lang.String)
comment5.text=\r\n\ Takes\ a\ photograph\ at\ a\ specified\ angle\ with\ a\ given\ color.\r\n\ @param\ teta\ The\ angle\ at\ which\ to\ take\ the\ photograph.\r\n\ @param\ color\ The\ color\ of\ the\ photograph.\r\n
comment6.params=teta\ color
comment6.target=void\ photograph(float,\ java.lang.String)
comment6.text=\r\n\ Takes\ a\ photograph\ at\ a\ specified\ angle\ with\ a\ given\ color.\r\n\ @param\ teta\ The\ angle\ at\ which\ to\ take\ the\ photograph.\r\n\ @param\ color\ The\ color\ of\ the\ photograph.\r\n
comment7.params=
comment7.target=int[]\ getLocation()
comment7.text=\r\n\ Gets\ the\ location\ of\ the\ photograph's\ starting\ position.\r\n\ @return\ An\ array\ containing\ the\ X,\ Y,\ and\ height\ coordinates\ of\ the\ starting\ position.\r\n
comment8.params=from\ to
comment8.target=void\ recorridefligth(int[],\ int[])
comment8.text=\r\n\ Leaves\ the\ track\ of\ the\ movement\ of\ the\ fligth\r\n\ @Parameters\ int[]\ position,\ boolean\ error,\ int\ x,\ int\ y\r\n\ @Return\r\n
comment9.params=
comment9.target=void\ makeVisible()
comment9.text=\r\n\ Makes\ the\ plane\ and\ line\ objects\ visible\ on\ the\ canvas\ window.\r\n\ This\ method\ sets\ the\ visibility\ status\ of\ both\ the\ plane\ and\ line\ objects\ to\r\n\ true,\ making\ them\ visible\ on\ the\ canvas\ window.\r\n
numComments=16
