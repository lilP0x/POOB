#BlueJ class context
comment0.target=Island
comment0.text=\r\n\ The\ Island\ class\ represents\ an\ island\ object\ with\ a\ polygonal\ shape.\r\n\ It\ stores\ information\ about\ the\ island's\ color,\ position\ vertices,\ and\ visibility\ status.\r\n\ @author\ Maria\ Torres,\ Juan\ Fernandez\r\n\ @version\ 1.5\ 23/09/2023\r\n
comment1.params=color\ polygon
comment1.target=Island(java.lang.String,\ int[][])
comment1.text=\r\n\ Constructor\ for\ the\ Island\ class.\r\n\r\n\ @param\ color\ The\ color\ of\ the\ Island\ object.\r\n\ @param\ polygon\ A\ two-dimensional\ array\ representing\ the\ vertices\ of\ the\ island's\ polygon.\r\n
comment10.params=vertex\ width\ height
comment10.target=boolean\ isIntersect(int[][],\ int,\ int)
comment10.text=\r\n\ Checks\ if\ the\ island\ intersects\ with\ the\ given\ region\ defined\ by\ its\ vertices,\ width,\ and\ height.\r\n\r\n\ @param\ vertex\ The\ vertices\ of\ the\ region.\r\n\ @param\ width\ The\ width\ of\ the\ region.\r\n\ @param\ height\ The\ height\ of\ the\ region.\r\n\ @return\ True\ if\ the\ island\ intersects\ with\ the\ region,\ false\ otherwise.\r\n
comment11.params=
comment11.target=boolean\ getVisible()
comment11.text=\r\n\ Retrieves\ the\ visibility\ status\ of\ the\ object.\r\n\r\n\ @return\ True\ if\ the\ object\ is\ currently\ visible,\ false\ otherwise.\r\n
comment12.params=state
comment12.target=void\ setVisible(boolean)
comment12.text=\r\n\ Sets\ the\ visibility\ status\ of\ the\ object.\r\n\r\n\ @param\ state\ True\ to\ make\ the\ object\ visible,\ false\ to\ make\ it\ invisible.\r\n
comment13.params=
comment13.target=void\ makeInvisible()
comment13.text=\r\n\ Makes\ the\ island\ invisible\ on\ the\ canvas\ window.\r\n
comment14.params=
comment14.target=void\ del()
comment14.text=\r\n\ Abstract\ method\ to\ delete\ the\ island.\ Subclasses\ should\ implement\ this\ method.\r\n
comment2.params=
comment2.target=void\ correccionParaAgregar()
comment2.text=\r\n\ Helper\ method\ to\ initialize\ the\ xPoints\ and\ yPoints\ arrays\ from\ the\ polygon\ data.\r\n
comment3.params=color
comment3.target=void\ createLados(java.lang.String)
comment3.text=\r\n\ Creates\ line\ segments\ to\ represent\ the\ sides\ of\ the\ island.\r\n\r\n\ @param\ color\ The\ color\ of\ the\ line\ segments.\r\n
comment4.params=fligths
comment4.target=boolean\ observedIsland(java.util.HashMap)
comment4.text=\r\n\ Checks\ if\ the\ island\ has\ been\ observed\ by\ any\ flight.\r\n\r\n\ @param\ fligths\ A\ HashMap\ containing\ flight\ objects.\r\n\ @return\ True\ if\ the\ island\ has\ been\ observed,\ false\ otherwise.\r\n
comment5.params=fligths
comment5.target=void\ uselessFligth(java.util.HashMap)
comment5.text=\r\n\ Marks\ the\ island\ as\ useless\ for\ all\ flights\ that\ intersect\ with\ it.\r\n\r\n\ @param\ fligths\ A\ HashMap\ containing\ flight\ objects.\r\n
comment6.params=
comment6.target=void\ linesObservedIsland()
comment6.text=\r\n\ Makes\ the\ line\ segments\ representing\ the\ island's\ sides\ visible\ on\ the\ canvas.\r\n
comment7.params=
comment7.target=int[][]\ islandLocation()
comment7.text=\r\n\ Gets\ the\ location\ of\ the\ island\ as\ a\ two-dimensional\ array.\r\n\r\n\ @return\ A\ two-dimensional\ array\ representing\ the\ location\ of\ the\ island.\r\n
comment8.params=
comment8.target=void\ makeVisible()
comment8.text=\r\n\ Makes\ the\ island\ visible\ on\ the\ canvas\ window.\r\n
comment9.params=
comment9.target=char\ getId()
comment9.text=\r\n\ Retrieves\ the\ identifier\ of\ the\ island.\r\n\r\n\ @return\ The\ identifier\ of\ the\ island.\r\n
numComments=15
